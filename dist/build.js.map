{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap 88d6765db61a7bfd8e9f","webpack:///./src/main.js","webpack:///./src/helpers/defaults.js","webpack:///./src/helpers/generate_id.js","webpack:///./src/components/Blox.js","webpack:///./src/components/Modal.js","webpack:///./src/components/Modtitle.js","webpack:///./src/components/Pick.js","webpack:///./~/babel-runtime/core-js/json/stringify.js","webpack:///./~/babel-runtime/~/core-js/library/fn/json/stringify.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.core.js","webpack:///./src/less/nu.less","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/components/Blox.vue?c783","webpack:///./src/components/Modal.vue?7a13","webpack:///./src/components/Modtitle.vue?a0f8","webpack:///./src/components/Pick.vue?8370","webpack:///./src/components/Blox.vue","webpack:///./src/components/Modal.vue","webpack:///./src/components/Modtitle.vue","webpack:///./src/components/Pick.vue","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./src/less/nu.less?42eb","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_stringify","_stringify2","_vue","_vue2","_Blox","_Blox2","_defaults","_defaults2","el","components","Nublox","filters","data","mapString","mapJson","mainVue","watch","deep","handler","val","oldVal","this","encodeURIComponent","ready","JSON","parse","decodeURIComponent","panel","filter","value","i","length","type","icon","col","size","arguments","undefined","_children","size_lg","row","layout","push","Object","defineProperty","now","Date","y","getFullYear","toString","getMonth","d","getDate","ho","getHours","mn","getMinutes","se","getSeconds","ms","getMilliseconds","rdm","Math","floor","random","slice","_Modal","_Modal2","_Modtitle","_Modtitle2","_generate_id","_generate_id2","props","Modal","Modtitle","clipboard","clipboardToRemove","methods","addMod","name","$","grep","e","newModule","moduleType","title","trigger","addCol","newColumn","addRow","index","newRow","$root","splice","remove","toRemove","noConfirm","confirmMsg","nuAlert","confirm","action","oldSize","set","edit","callModal","place","header","$broadcast","clipClear","clipCut","mod","clipPaste","_Pick","_Pick2","Pick","modalAction","insertPlace","events","open-modal","modal","disable","unedit","tit","rowLayouts","pickedModule","$dispatch","$parent","pickedRows","core","it","stringify","apply","version","__e","list","result","item","join","mediaQuery","alreadyImportedModules","__vue_script__","__vue_template__","options","template","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","createStyleElement","document","createElement","update","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","memoize","fn","memo","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","content","locals","global","key","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","l","toArray","start","ret","Array","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","later","last","setTimeout","arr","cancellable","cb","cancelled","cancel","looseEqual","Cache","limit","tail","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","query","querySelector","inDoc","node","doc","documentElement","parent","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","after","prepend","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","prototype","_init","$el","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","kebab","setObjectClasses","toggleClasses","stringToObject","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","source","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _stringify = __webpack_require__(7);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tvar _vue = __webpack_require__(22);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _Blox = __webpack_require__(16);\n\t\n\tvar _Blox2 = _interopRequireDefault(_Blox);\n\t\n\tvar _defaults = __webpack_require__(1);\n\t\n\tvar _defaults2 = _interopRequireDefault(_defaults);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t    el: 'body',\n\t    components: { Nublox: _Blox2.default },\n\t    filters: {},\n\t    data: {\n\t        mapString: '',\n\t        mapJson: '',\n\t        modules: '',\n\t        mainVue: _vue2.default },\n\t    watch: {\n\t        'mapJson': {\n\t            deep: true,\n\t            handler: function handler(val, oldVal) {\n\t                this.mapString = encodeURIComponent((0, _stringify2.default)(val));\n\t            }\n\t        }\n\t    },\n\t    ready: function ready() {\n\t        if (this.mapString) {\n\t            this.mapJson = JSON.parse(decodeURIComponent(this.mapString));\n\t        } else {\n\t                this.mapJson = _defaults2.default.panel();\n\t            }\n\t    }\n\t});\n\t\n\t_vue2.default.filter('toIcon', function (value) {\n\t    var i = 0;\n\t    for (i; i < this.modules.length; i++) {\n\t        if (this.modules[i].type === value) {\n\t            return this.modules[i].icon;\n\t        }\n\t    }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t    col: function col() {\n\t        var size = arguments.length <= 0 || arguments[0] === undefined ? 12 : arguments[0];\n\t\n\t        return { 'type': 'col', '_children': [], 'size_lg': size };\n\t    },\n\t    row: function row() {\n\t        var layout = arguments.length <= 0 || arguments[0] === undefined ? [12] : arguments[0];\n\t\n\t        var row = { 'type': 'row', '_children': [] };\n\t        for (var i = 0; i < layout.length; i++) {\n\t            row._children.push(this.col(layout[i]));\n\t        }\n\t        return row;\n\t    },\n\t    panel: function panel() {\n\t        var panel = { 'type': 'panel', '_children': [] };\n\t        panel._children.push(this.row());\n\t        return panel;\n\t    }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function () {\n\t    var now = new Date();\n\t    var y = now.getFullYear().toString();\n\t    var m = (now.getMonth() + 1).toString();\n\t    var d = now.getDate().toString();\n\t    var ho = now.getHours().toString();\n\t    var mn = now.getMinutes().toString();\n\t    var se = now.getSeconds().toString();\n\t    var ms = now.getMilliseconds().toString();\n\t\n\t    var rdm = Math.floor(1000000000 + Math.random() * 9000000000);\n\t    rdm = rdm.toString();\n\t\n\t    m = ('0' + m).slice(-2);\n\t    d = ('0' + d).slice(-2);\n\t    ho = ('0' + ho).slice(-2);\n\t    mn = ('0' + mn).slice(-2);\n\t    se = ('0' + se).slice(-2);\n\t    ms = ('0' + ms).slice(-3);\n\t\n\t    return y + m + d + ho + mn + se + ms + rdm;\n\t};\n\t\n\t;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Modal = __webpack_require__(17);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _Modtitle = __webpack_require__(18);\n\t\n\tvar _Modtitle2 = _interopRequireDefault(_Modtitle);\n\t\n\tvar _defaults = __webpack_require__(1);\n\t\n\tvar _defaults2 = _interopRequireDefault(_defaults);\n\t\n\tvar _generate_id = __webpack_require__(2);\n\t\n\tvar _generate_id2 = _interopRequireDefault(_generate_id);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    props: ['modules'],\n\t    components: { Modal: _Modal2.default, Modtitle: _Modtitle2.default },\n\t    data: function data() {\n\t        return {\n\t            clipboard: '',\n\t            clipboardToRemove: ''\n\t        };\n\t    },\n\t\n\t    methods: {\n\t        addMod: function addMod(col, type) {\n\t            var id = (0, _generate_id2.default)();\n\t            var name = $.grep(this.modules, function (e) {\n\t                return e.type === type;\n\t            });\n\t            var newModule = { 'type': 'module', 'id': id, 'moduleType': type, 'title': name[0].name };\n\t            col._children.push(newModule);\n\t            $('body').trigger('nuBlox.add', [id, type]);\n\t        },\n\t\n\t        addCol: function addCol(row) {\n\t            var newColumn = _defaults2.default.col();\n\t            row._children.push(newColumn);\n\t        },\n\t\n\t        addRow: function addRow(index, layout) {\n\t            var newRow = _defaults2.default.row(layout);\n\t            this.$root.mapJson._children.splice(index + 1, 0, newRow);\n\t        },\n\t\n\t        remove: function remove(toRemove, index, noConfirm) {\n\t            var confirmMsg = 'Na pewno chcesz usunąć wybrany element? Operacja jest nieodwracalna.';\n\t            toRemove = !toRemove ? this.$root.mapJson : toRemove;\n\t            if ('module' !== toRemove._children[index].type && 1 === toRemove._children.length) {\n\t                $.nuAlert('warning', 'Nie można usunąć ostatniego elementu!');\n\t            } else {\n\t                if (1 === noConfirm) {\n\t                    toRemove._children.splice(index, 1);\n\t                } else {\n\t                    if (true === confirm(confirmMsg)) {\n\t                        toRemove._children.splice(index, 1);\n\t                    }\n\t                }\n\t            }\n\t        },\n\t\n\t        size: function size(col, action) {\n\t            var oldSize = col.size_lg;\n\t            if ('+' === action && oldSize < 12) {\n\t                oldSize++;\n\t            } else if ('-' === action && oldSize > 1) {\n\t                oldSize--;\n\t            }\n\t            this.$root.mainVue.set(col, 'size_lg', oldSize);\n\t        },\n\t\n\t        edit: function edit(moduleId) {\n\t            $('body').trigger('nuBlox.edit', [moduleId]);\n\t        },\n\t\n\t        callModal: function callModal(action, place, header) {\n\t            this.$broadcast('open-modal', action, place, header);\n\t        },\n\t\n\t        clipClear: function clipClear() {\n\t            this.clipboard = '';\n\t            this.clipboardToRemove = '';\n\t        },\n\t\n\t        clipCut: function clipCut(mod, col, index) {\n\t            this.clipboard = mod;\n\t            this.clipboardToRemove = [col, index];\n\t        },\n\t\n\t        clipPaste: function clipPaste(col, index) {\n\t            this.remove(this.clipboardToRemove[0], this.clipboardToRemove[1], 1);\n\t            col._children.splice(index + 1, 0, this.clipboard);\n\t            this.clipClear();\n\t        }\n\t    },\n\t\n\t    ready: function ready() {\n\t        this.$root.modules = this.modules;\n\t    }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Pick = __webpack_require__(19);\n\t\n\tvar _Pick2 = _interopRequireDefault(_Pick);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    components: { Pick: _Pick2.default },\n\t\n\t    data: function data() {\n\t        return {\n\t            modalAction: '',\n\t            insertPlace: '',\n\t            header: ''\n\t        };\n\t    },\n\t\n\t    events: {\n\t        'open-modal': function openModal(action, place, header) {\n\t            this.modalAction = action;\n\t            this.insertPlace = place;\n\t            this.header = header;\n\t            $('#nuBlox-modal').modal();\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    props: ['tit', 'id'],\n\t    data: function data() {\n\t        return {\n\t            disable: true\n\t        };\n\t    },\n\t\n\t    methods: {\n\t        edit: function edit(e) {\n\t            this.disable = false;\n\t        },\n\t\n\t        unedit: function unedit() {\n\t            this.disable = true;\n\t        }\n\t    },\n\t\n\t    watch: {\n\t        'tit': function tit(val, oldVal) {\n\t            if (0 === val.length) {\n\t                this.tit = oldVal;\n\t            } else {\n\t                this.tit = val;\n\t            }\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    data: function data() {\n\t        return {\n\t            rowLayouts: [[12], [6, 6], [4, 4, 4], [3, 3, 3, 3]]\n\t        };\n\t    },\n\t\n\t    methods: {\n\t        pickedModule: function pickedModule(type) {\n\t            this.$dispatch('add-module', this.$parent.insertPlace, type);\n\t            $('#nuBlox-modal').modal('hide');\n\t        },\n\t\n\t        pickedRows: function pickedRows(layout) {\n\t            this.$dispatch('add-row', this.$parent.insertPlace, layout);\n\t            $('#nuBlox-modal').modal('hide');\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(8), __esModule: true };\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core = __webpack_require__(9);\n\tmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n\t  return (core.JSON && core.JSON.stringify || JSON.stringify).apply(JSON, arguments);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(11)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"#nuBlox .nb-btn{min-width:30px;height:30px;background:none;border:none;padding:0;color:#d1d1d1;-webkit-transition:all .2s;transition:all .2s}#nuBlox .nb-btn:focus{outline:none;border:none;padding:0;margin:0}#nuBlox .nb-btn:hover{color:#47c981}#nuBlox .nb-btn i{font-size:14px}#nuBlox .nb-dropdown li a{cursor:pointer}#nuBlox .nb-dropdown li a i{width:24px}.clrAfter{clear:both}.clrAfter:after{content:'';display:block;width:100%;clear:both}#nuBlox{clear:both}#nuBlox:after{content:'';display:block;width:100%;clear:both}#nuBlox .nuBlox-row{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap}#nuBlox .nuBlox-col{-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto}#nuBlox .nuBlox-col-12{width:100%}#nuBlox .nuBlox-col-11{width:91.66666667%}#nuBlox .nuBlox-col-10{width:83.33333333%}#nuBlox .nuBlox-col-9{width:75%}#nuBlox .nuBlox-col-8{width:66.66666667%}#nuBlox .nuBlox-col-7{width:58.33333333%}#nuBlox .nuBlox-col-6{width:50%}#nuBlox .nuBlox-col-5{width:41.66666667%}#nuBlox .nuBlox-col-4{width:33.33333333%}#nuBlox .nuBlox-col-3{width:25%}#nuBlox .nuBlox-col-2{width:16.66666667%}#nuBlox .nuBlox-col-1{width:8.33333333%}*{box-sizing:border-box}#nuBlox .nuBlox-row{position:relative;margin-bottom:50px;background:#fff;border-radius:3px}#nuBlox .nuBlox-row .nuBlox-row-options{display:block;width:100%;background:#d1d1d1;color:#fff;padding:3px 20px}#nuBlox .nuBlox-row .nuBlox-row-options .nb-btn{color:#9e9e9e}#nuBlox .nuBlox-row .nuBlox-row-options .nb-btn:hover{color:#47c981}#nuBlox .nuBlox-row .nuBlox-row-options .nb-btn-addrow{position:absolute;bottom:-38px;left:0}#nuBlox .nuBlox-col{position:relative;padding:20px;box-shadow:1px 1px 0 0 #eee;-webkit-transition:all .2s;transition:all .2s;overflow:hidden}#nuBlox .nuBlox-col .nuBlox-col-options{display:block;width:100%;height:35px;white-space:nowrap}#nuBlox .nuBlox-col .nuBlox-col-options .nb-col-size{display:inline-block;width:50px;color:#d1d1d1}#nuBlox .nuBlox-col .nb-modules-wrapper{position:relative;min-height:110px;overflow:hidden}#nuBlox .nuBlox-col .nb-col-addmodule{padding:0 7px}#nuBlox .nuBlox-col .nb-btn-add{position:absolute;top:0;left:0;width:100%;height:100px;border-radius:3px;background:#f8f8f8}#nuBlox .nuBlox-mod{position:relative;z-index:1;height:100px;margin-bottom:10px;border-radius:3px;background:#47c981;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-options{position:absolute;right:0;bottom:0;padding:7px}#nuBlox .nuBlox-mod .nuBlox-mod-options .nb-btn{color:#1b5c38;opacity:.4}#nuBlox .nuBlox-mod .nuBlox-mod-options .nb-btn:hover{opacity:1}#nuBlox .nuBlox-mod .nuBlox-mod-info{position:relative;overflow:hidden;padding:15px 10px 15px 50px;white-space:nowrap}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-icon{position:absolute;top:11px;left:15px;font-size:20px}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title{font-size:16px}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title-input label{width:100%;font-size:16px;font-weight:400;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title-input label span{display:inline-block;cursor:pointer;padding:1px 0;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title-input label input{width:100%;background:#32ab68;border:none;border-radius:3px;outline:none;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-type{margin-top:-5px;opacity:.5}#nuBlox .nuBlox-mod.nb-mod-pick{cursor:pointer;-webkit-transition:background .3s;transition:background .3s}#nuBlox .nuBlox-mod.nb-mod-pick:hover{background:#32ab68}#nuBlox .nb-clip-area-global{width:100%;height:26px;line-height:26px;background:#f8f8f8;border:1px dashed #d1d1d1;border-radius:3px;color:#d1d1d1;text-align:center;cursor:pointer;-webkit-transition:all .2s;transition:all .2s}#nuBlox .nb-clip-area-global:hover{color:#47c981;border-color:#47c981;background:#f8fdfb}#nuBlox .nb-clip-area{position:absolute;bottom:-4px;box-shadow:0 -6px 0 0 #fff;width:100%;height:26px;line-height:26px;background:#f8f8f8;border:1px dashed #d1d1d1;border-radius:3px;color:#d1d1d1;text-align:center;cursor:pointer;-webkit-transition:all .2s;transition:all .2s}#nuBlox .nb-clip-area:hover{color:#47c981;border-color:#47c981;background:#f8fdfb}#nuBlox .nb-clip-area-out{position:absolute;top:23px;width:100%;height:26px;line-height:26px;background:#f8f8f8;border:1px dashed #d1d1d1;border-radius:3px;color:#d1d1d1;text-align:center;cursor:pointer;-webkit-transition:all .2s;transition:all .2s;width:calc(100% - 40px)}#nuBlox .nb-clip-area-out:hover{color:#47c981;border-color:#47c981;background:#f8fdfb}.animModule-transition{-webkit-transition:all .3s ease;transition:all .3s ease;opacity:1}.animModule-enter,.animModule-leave{opacity:0;height:0!important;margin-bottom:0!important}.animClipboard-transition{-webkit-transition:opacity .3s ease!important;transition:opacity .3s ease!important;opacity:1}.animClipboard-enter,.animClipboard-leave{opacity:0}.animRow-transition{-webkit-transition:all .2s ease!important;transition:all .2s ease!important;opacity:1}.animRow-enter,.animRow-leave{opacity:0}.animCol-transition{opacity:1}.animCol-enter,.animCol-leave{opacity:0}#nuBlox .rowSelect{margin-right:5px;margin-left:5px}#nuBlox .rowSelect .rowSelectCol{padding-right:5px;padding-left:5px;padding-top:38px}#nuBlox .rowSelect span{display:block;width:100%;height:2px;background:#fff;margin-bottom:5px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=nuBlox> <button type=button class=\\\"btn btn-success\\\" v-if=clipboard v-on:click=clipClear>Wyczyść schowek</button> <button type=button class=\\\"btn btn-default\\\" v-else disabled=disabled>Wyczyść schowek</button> <br/><br/> <div class=nuBlox-row v-for=\\\"row in $root.mapJson._children\\\" transition=animRow> <div class=\\\"nuBlox-row-options text-right\\\"> <button class=nb-btn v-on:click=addCol(row)><i class=\\\"fa fa-columns\\\"></i></button> <button class=\\\"nb-btn nb-btn-addrow\\\" v-on:click=\\\"callModal('rows', $index, 'Add row')\\\"><i class=\\\"fa fa-navicon\\\"></i></button> <button class=nb-btn v-on:click=\\\"remove('', $index)\\\"><i class=\\\"fa fa-trash\\\"></i></button> </div> <div class=\\\"nuBlox-col nuBlox-col-{{ col.size_lg }}\\\" v-for=\\\"col in row._children\\\" transition=animCol> <div class=nuBlox-col-options> <span class=nb-col-size>{{col.size_lg}} / 12</span> <button class=nb-btn v-on:click=\\\"size(col, '-')\\\"><i class=\\\"fa fa-arrow-left\\\"></i></button> <button class=nb-btn v-on:click=\\\"size(col, '+')\\\"><i class=\\\"fa fa-arrow-right\\\"></i></button> <button class=nb-btn v-on:click=\\\"remove(row, $index)\\\"><i class=\\\"fa fa-trash\\\"></i></button> </div> <div class=nb-clip-area-out v-on:click=\\\"clipPaste(col, -1)\\\" v-if=clipboard> <i class=\\\"fa fa-paste\\\"></i> </div> <div class=nb-modules-wrapper> <div class=nuBlox-mod v-bind:class=\\\"{ 'nb-mod-margin': clipboard }\\\" v-for=\\\"module in col._children\\\" transition=animModule> <div class=nuBlox-mod-options> <button class=nb-btn v-on:click=edit(module.id)><i class=\\\"fa fa-pencil\\\"></i></button> <button class=nb-btn v-on:click=\\\"clipCut(module, col, $index)\\\"><i class=\\\"fa fa-cut\\\"></i></button> <button class=nb-btn v-on:click=\\\"remove(col, $index)\\\"><i class=\\\"fa fa-trash\\\"></i></button> </div> <div class=nuBlox-mod-info> <div class=nb-mod-info-icon><i class=\\\"fa fa-{{ module.moduleType | toIcon }}\\\"></i></div> <modtitle :tit.sync=module.title :id=module.id></modtitle> <div class=nb-mod-info-type>{{ module.moduleType }}</div> </div> <div class=nb-clip-area v-on:click=\\\"clipPaste(col, $index)\\\" v-if=clipboard> <i class=\\\"fa fa-paste\\\"></i> </div> </div> <button class=\\\"nb-btn nb-btn-add\\\" v-on:click=\\\"callModal('modules', col, 'Add module')\\\"><i class=\\\"fa fa-plus\\\"></i></button> </div> <div class=\\\"nb-col-addmodule text-right\\\"> <button class=nb-btn v-on:click=\\\"callModal('modules', col, 'Add module')\\\"><i class=\\\"fa fa-plus\\\"></i></button> </div> </div> </div> <modal v-on:add-module=addMod v-on:add-row=addRow></modal> </div>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal fade\\\" id=nuBlox-modal tabindex=-1 role=dialog> <div class=\\\"modal-dialog modal-lg\\\" role=document> <div class=modal-content> <div class=modal-header> <button type=button class=close data-dismiss=modal><span>&times;</span></button> <h4 class=modal-title>{{ header }}</h4> </div> <div class=modal-body> <pick></pick> </div> <div class=modal-footer v-if=\\\"modalAction === 'settings'\\\"> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>Close</button> <button type=button class=\\\"btn btn-primary\\\">Save changes</button> </div> </div> </div> </div>\";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=nb-mod-info-title-input> <label data-nublox-title-id=\\\"{{ id }}\\\" data-nublox-title-title=\\\"{{ tit }}\\\"> <span v-on:click=edit v-if=disable>{{ tit }}</span> <input type=text v-model=tit v-if=!disable v-on:blur=unedit v-on:keyup.enter=unedit> </label> </div>\";\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=row v-if=\\\"$parent.modalAction === 'modules'\\\"> <div class=col-xs-3 v-for=\\\"module in $root.modules\\\"> <div class=\\\"nuBlox-mod nb-mod-pick\\\" v-on:click=\\\"pickedModule( module.type )\\\"> <div class=nuBlox-mod-info> <div class=nb-mod-info-icon><i class=\\\"fa fa-{{ module.icon }}\\\"></i></div> <div class=nb-mod-info-title>{{ module.name }}</div> </div> </div> </div> </div> <div class=row v-if=\\\"$parent.modalAction === 'rows'\\\"> <div class=col-xs-3 v-for=\\\"row in rowLayouts\\\"> <div class=\\\"nuBlox-mod nb-mod-pick\\\" v-on:click=\\\"pickedRows( row )\\\"> <div class=\\\"row rowSelect\\\"> <div v-for=\\\"col in row\\\" track-by=$index> <div class=\\\"rowSelectCol col-xs-{{ col }}\\\"> <span></span><span></span><span></span><span></span> </div> </div> </div> </div> </div> </div>\";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(21)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(14)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(10);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(20)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./nu.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./nu.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.21\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (!this.prevKeys) return;\n\t\n\t    var i = this.prevKeys.length;\n\t    while (i--) {\n\t      var key = this.prevKeys[i];\n\t      if (!key) continue;\n\t\n\t      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n\t      for (var j = 0, l = keys.length; j < l; j++) {\n\t        toggleClasses(this.el, keys[j], removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (!obj[key]) continue;\n\t    toggleClasses(el, key, addClass);\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction toggleClasses(el, key, fn) {\n\t  key = key.trim();\n\t\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.21';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 88d6765db61a7bfd8e9f\n **/","import Vue from 'vue';\nimport Nublox from './components/Blox.vue';\nimport defaults from './helpers/defaults.js';\n\nnew Vue({\n    el: 'body',\n    components: { Nublox },\n    filters: {},\n    data: {\n        mapString: '', // Main data on string format\n        mapJson: '', // Main data on json format\n        modules: '', // Available modules\n        mainVue: Vue // Vue instance\n    },\n    watch: {\n        'mapJson': {\n            deep: true,\n            handler: function( val, oldVal ) {\n                this.mapString = encodeURIComponent( JSON.stringify( val ) ); // Json to string\n            }\n        }\n    },\n    ready: function() {\n        if ( this.mapString ) {\n            this.mapJson = JSON.parse( decodeURIComponent( this.mapString ) ); // Decode string to JSON if exist\n        } else {\n            this.mapJson = defaults.panel(); // Create default panel if JSON not exist\n        }\n    }\n});\n\nVue.filter( 'toIcon', function( value ) {\n    var i = 0;\n    for ( i; i < this.modules.length; i++ ) {\n        if ( this.modules[i].type === value ) {\n            return this.modules[i].icon;\n        }\n    }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","module.exports = {\r\n    col: function( size = 12 ) {\r\n        return { 'type': 'col', '_children': [], 'size_lg': size };\r\n    },\r\n    row: function( layout = [12] ) {\r\n        var row = { 'type': 'row', '_children': [] };\r\n        for ( var i = 0; i < layout.length; i++ ) {\r\n            row._children.push( this.col( layout[i] ) );\r\n        }\r\n        return row;\r\n    },\r\n    panel: function() {\r\n        var panel = { 'type': 'panel', '_children': [] };\r\n        panel._children.push( this.row() );\r\n        return panel;\r\n    }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/defaults.js\n **/","export default function () {\r\n\r\n    // Get date\r\n    var now = new Date();\r\n    var y = now.getFullYear().toString();\r\n    var m = ( now.getMonth() + 1 ).toString();\r\n    var d = now.getDate().toString();\r\n    var ho = now.getHours().toString();\r\n    var mn = now.getMinutes().toString();\r\n    var se = now.getSeconds().toString();\r\n    var ms = now.getMilliseconds().toString();\r\n\r\n    // Add random number\r\n    var rdm = Math.floor( 1000000000 + Math.random() * 9000000000 );\r\n    rdm = rdm.toString();\r\n\r\n    // Add 0 to singles\r\n    m = ( '0' + m ).slice( -2 );\r\n    d = ( '0' + d ).slice( -2 );\r\n    ho = ( '0' + ho ).slice( -2 );\r\n    mn = ( '0' + mn ).slice( -2 );\r\n    se = ( '0' + se ).slice( -2 );\r\n    ms = ( '0' + ms ).slice( -3 );\r\n\r\n    // Return full string\r\n    return y + m + d + ho + mn + se + ms + rdm;\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/helpers/generate_id.js\n **/","import Modal from './Modal.vue';\r\nimport Modtitle from './Modtitle.vue';\r\nimport defaults from '../helpers/defaults.js';\r\nimport generateID from '../helpers/generate_id.js';\r\n\r\nexport default\r\n{\r\n    props: [ 'modules' ],\r\n    components: { Modal, Modtitle },\r\n    data: function() {\r\n        return {\r\n            clipboard: '',\r\n            clipboardToRemove: ''\r\n        };\r\n    },\r\n\r\n    methods: {\r\n\r\n        // Add module - first paramert is place where add, and second is type of new module\r\n        // You can add module from Modal component via events or add this function after click i Blox component\r\n        addMod: function( col, type ) {\r\n            var id = generateID();\r\n            var name = $.grep( this.modules, function( e ) {\r\n                return e.type === type;\r\n            }); // Find module name\r\n            var newModule = { 'type': 'module', 'id': id, 'moduleType': type, 'title': name[0].name };\r\n            col._children.push( newModule );\r\n            $( 'body' ).trigger( 'nuBlox.add', [ id, type ] ); // Trigger add event\r\n        },\r\n\r\n        addCol: function( row ) {\r\n            var newColumn = defaults.col();\r\n            row._children.push( newColumn );\r\n        },\r\n\r\n        addRow: function( index, layout ) {\r\n            var newRow = defaults.row( layout );\r\n            this.$root.mapJson._children.splice( index + 1, 0, newRow );\r\n        },\r\n\r\n        remove: function( toRemove, index, noConfirm ) {\r\n            var confirmMsg = 'Na pewno chcesz usunąć wybrany element? Operacja jest nieodwracalna.'; // Confirm message\r\n            toRemove = ( ! toRemove ) ? this.$root.mapJson : toRemove;  // Condition for removing row's\r\n            if ( 'module' !== toRemove._children[index].type && 1 === toRemove._children.length ) { // Remove only if it is not last column or row\r\n                $.nuAlert( 'warning', 'Nie można usunąć ostatniego elementu!' );\r\n            } else {\r\n                if ( 1 === noConfirm ) {\r\n                    toRemove._children.splice( index, 1 );\r\n                } else {\r\n                    if ( true === confirm( confirmMsg ) ) {\r\n                        toRemove._children.splice( index, 1 );\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        size: function( col, action ) {\r\n            var oldSize = col.size_lg;\r\n            if ( '+' === action && oldSize < 12 ) {\r\n                oldSize++;\r\n            } else if ( '-' === action && oldSize > 1 ) {\r\n                oldSize--;\r\n            }\r\n            this.$root.mainVue.set( col, 'size_lg', oldSize );\r\n        },\r\n\r\n        edit: function( moduleId ) {\r\n            $( 'body' ).trigger( 'nuBlox.edit', [ moduleId ] );\r\n        },\r\n\r\n        callModal: function( action, place, header ) {\r\n            this.$broadcast( 'open-modal', action, place, header );\r\n        },\r\n\r\n        // Clipboard functions\r\n        clipClear: function() {\r\n            this.clipboard = '';\r\n            this.clipboardToRemove = '';\r\n        },\r\n\r\n        clipCut: function( mod, col, index ) {\r\n            this.clipboard = mod; // Sign copied module to var\r\n            this.clipboardToRemove = [col, index]; // Sign copied module to remove later\r\n        },\r\n\r\n        clipPaste: function( col, index ) {\r\n            this.remove( this.clipboardToRemove[0], this.clipboardToRemove[1], 1 ); // Remove module in old place\r\n            col._children.splice( index + 1, 0, this.clipboard ); // Add module to new place\r\n            this.clipClear(); // Clear clipboard\r\n        }\r\n    },\r\n\r\n    ready: function() {\r\n        this.$root.modules = this.modules;\r\n    }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Blox.js\n **/","import Pick from './Pick.vue';\r\n\r\nexport default\r\n{\r\n    components: { Pick },\r\n\r\n    data: function() {\r\n        return {\r\n            modalAction: '',\r\n            insertPlace: '',\r\n            header: ''\r\n        };\r\n    },\r\n\r\n    events:\r\n    {\r\n        'open-modal': function( action, place, header ) {\r\n            this.modalAction = action;\r\n            this.insertPlace = place;\r\n            this.header = header;\r\n            $( '#nuBlox-modal' ).modal();\r\n        }\r\n    }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Modal.js\n **/","export default\r\n{\r\n    props: [ 'tit', 'id' ],\r\n    data: function() {\r\n        return {\r\n            disable: true\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        edit: function( e ) {\r\n            this.disable = false;\r\n        },\r\n\r\n        unedit: function() {\r\n            this.disable = true;\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        'tit': function( val, oldVal ) {\r\n            if ( 0 === val.length ) {\r\n                this.tit = oldVal;\r\n            } else {\r\n                this.tit = val;\r\n            }\r\n        }\r\n    }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Modtitle.js\n **/","export default\r\n{\r\n    data: function() {\r\n        return {\r\n            rowLayouts: [ [12], [6, 6], [4, 4, 4], [3, 3, 3, 3] ]\r\n        };\r\n    },\r\n\r\n    methods:\r\n    {\r\n        pickedModule: function( type ) {\r\n            this.$dispatch( 'add-module', this.$parent.insertPlace, type );\r\n            $( '#nuBlox-modal' ).modal( 'hide' );\r\n        },\r\n\r\n        pickedRows: function( layout ) {\r\n            this.$dispatch( 'add-row', this.$parent.insertPlace, layout );\r\n            $( '#nuBlox-modal' ).modal( 'hide' );\r\n        }\r\n    }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Pick.js\n **/","module.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/json/stringify.js\n ** module id = 7\n ** module chunks = 0\n **/","var core = require('../../modules/$.core');\nmodule.exports = function stringify(it){ // eslint-disable-line no-unused-vars\n  return (core.JSON && core.JSON.stringify || JSON.stringify).apply(JSON, arguments);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/json/stringify.js\n ** module id = 8\n ** module chunks = 0\n **/","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.core.js\n ** module id = 9\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"#nuBlox .nb-btn{min-width:30px;height:30px;background:none;border:none;padding:0;color:#d1d1d1;-webkit-transition:all .2s;transition:all .2s}#nuBlox .nb-btn:focus{outline:none;border:none;padding:0;margin:0}#nuBlox .nb-btn:hover{color:#47c981}#nuBlox .nb-btn i{font-size:14px}#nuBlox .nb-dropdown li a{cursor:pointer}#nuBlox .nb-dropdown li a i{width:24px}.clrAfter{clear:both}.clrAfter:after{content:'';display:block;width:100%;clear:both}#nuBlox{clear:both}#nuBlox:after{content:'';display:block;width:100%;clear:both}#nuBlox .nuBlox-row{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap}#nuBlox .nuBlox-col{-webkit-box-flex:0;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto}#nuBlox .nuBlox-col-12{width:100%}#nuBlox .nuBlox-col-11{width:91.66666667%}#nuBlox .nuBlox-col-10{width:83.33333333%}#nuBlox .nuBlox-col-9{width:75%}#nuBlox .nuBlox-col-8{width:66.66666667%}#nuBlox .nuBlox-col-7{width:58.33333333%}#nuBlox .nuBlox-col-6{width:50%}#nuBlox .nuBlox-col-5{width:41.66666667%}#nuBlox .nuBlox-col-4{width:33.33333333%}#nuBlox .nuBlox-col-3{width:25%}#nuBlox .nuBlox-col-2{width:16.66666667%}#nuBlox .nuBlox-col-1{width:8.33333333%}*{box-sizing:border-box}#nuBlox .nuBlox-row{position:relative;margin-bottom:50px;background:#fff;border-radius:3px}#nuBlox .nuBlox-row .nuBlox-row-options{display:block;width:100%;background:#d1d1d1;color:#fff;padding:3px 20px}#nuBlox .nuBlox-row .nuBlox-row-options .nb-btn{color:#9e9e9e}#nuBlox .nuBlox-row .nuBlox-row-options .nb-btn:hover{color:#47c981}#nuBlox .nuBlox-row .nuBlox-row-options .nb-btn-addrow{position:absolute;bottom:-38px;left:0}#nuBlox .nuBlox-col{position:relative;padding:20px;box-shadow:1px 1px 0 0 #eee;-webkit-transition:all .2s;transition:all .2s;overflow:hidden}#nuBlox .nuBlox-col .nuBlox-col-options{display:block;width:100%;height:35px;white-space:nowrap}#nuBlox .nuBlox-col .nuBlox-col-options .nb-col-size{display:inline-block;width:50px;color:#d1d1d1}#nuBlox .nuBlox-col .nb-modules-wrapper{position:relative;min-height:110px;overflow:hidden}#nuBlox .nuBlox-col .nb-col-addmodule{padding:0 7px}#nuBlox .nuBlox-col .nb-btn-add{position:absolute;top:0;left:0;width:100%;height:100px;border-radius:3px;background:#f8f8f8}#nuBlox .nuBlox-mod{position:relative;z-index:1;height:100px;margin-bottom:10px;border-radius:3px;background:#47c981;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-options{position:absolute;right:0;bottom:0;padding:7px}#nuBlox .nuBlox-mod .nuBlox-mod-options .nb-btn{color:#1b5c38;opacity:.4}#nuBlox .nuBlox-mod .nuBlox-mod-options .nb-btn:hover{opacity:1}#nuBlox .nuBlox-mod .nuBlox-mod-info{position:relative;overflow:hidden;padding:15px 10px 15px 50px;white-space:nowrap}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-icon{position:absolute;top:11px;left:15px;font-size:20px}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title{font-size:16px}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title-input label{width:100%;font-size:16px;font-weight:400;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title-input label span{display:inline-block;cursor:pointer;padding:1px 0;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-title-input label input{width:100%;background:#32ab68;border:none;border-radius:3px;outline:none;color:#fff}#nuBlox .nuBlox-mod .nuBlox-mod-info .nb-mod-info-type{margin-top:-5px;opacity:.5}#nuBlox .nuBlox-mod.nb-mod-pick{cursor:pointer;-webkit-transition:background .3s;transition:background .3s}#nuBlox .nuBlox-mod.nb-mod-pick:hover{background:#32ab68}#nuBlox .nb-clip-area-global{width:100%;height:26px;line-height:26px;background:#f8f8f8;border:1px dashed #d1d1d1;border-radius:3px;color:#d1d1d1;text-align:center;cursor:pointer;-webkit-transition:all .2s;transition:all .2s}#nuBlox .nb-clip-area-global:hover{color:#47c981;border-color:#47c981;background:#f8fdfb}#nuBlox .nb-clip-area{position:absolute;bottom:-4px;box-shadow:0 -6px 0 0 #fff;width:100%;height:26px;line-height:26px;background:#f8f8f8;border:1px dashed #d1d1d1;border-radius:3px;color:#d1d1d1;text-align:center;cursor:pointer;-webkit-transition:all .2s;transition:all .2s}#nuBlox .nb-clip-area:hover{color:#47c981;border-color:#47c981;background:#f8fdfb}#nuBlox .nb-clip-area-out{position:absolute;top:23px;width:100%;height:26px;line-height:26px;background:#f8f8f8;border:1px dashed #d1d1d1;border-radius:3px;color:#d1d1d1;text-align:center;cursor:pointer;-webkit-transition:all .2s;transition:all .2s;width:calc(100% - 40px)}#nuBlox .nb-clip-area-out:hover{color:#47c981;border-color:#47c981;background:#f8fdfb}.animModule-transition{-webkit-transition:all .3s ease;transition:all .3s ease;opacity:1}.animModule-enter,.animModule-leave{opacity:0;height:0!important;margin-bottom:0!important}.animClipboard-transition{-webkit-transition:opacity .3s ease!important;transition:opacity .3s ease!important;opacity:1}.animClipboard-enter,.animClipboard-leave{opacity:0}.animRow-transition{-webkit-transition:all .2s ease!important;transition:all .2s ease!important;opacity:1}.animRow-enter,.animRow-leave{opacity:0}.animCol-transition{opacity:1}.animCol-enter,.animCol-leave{opacity:0}#nuBlox .rowSelect{margin-right:5px;margin-left:5px}#nuBlox .rowSelect .rowSelectCol{padding-right:5px;padding-left:5px;padding-top:38px}#nuBlox .rowSelect span{display:block;width:100%;height:2px;background:#fff;margin-bottom:5px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./src/less/nu.less\n ** module id = 10\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = \"<div id=nuBlox> <button type=button class=\\\"btn btn-success\\\" v-if=clipboard v-on:click=clipClear>Wyczyść schowek</button> <button type=button class=\\\"btn btn-default\\\" v-else disabled=disabled>Wyczyść schowek</button> <br/><br/> <div class=nuBlox-row v-for=\\\"row in $root.mapJson._children\\\" transition=animRow> <div class=\\\"nuBlox-row-options text-right\\\"> <button class=nb-btn v-on:click=addCol(row)><i class=\\\"fa fa-columns\\\"></i></button> <button class=\\\"nb-btn nb-btn-addrow\\\" v-on:click=\\\"callModal('rows', $index, 'Add row')\\\"><i class=\\\"fa fa-navicon\\\"></i></button> <button class=nb-btn v-on:click=\\\"remove('', $index)\\\"><i class=\\\"fa fa-trash\\\"></i></button> </div> <div class=\\\"nuBlox-col nuBlox-col-{{ col.size_lg }}\\\" v-for=\\\"col in row._children\\\" transition=animCol> <div class=nuBlox-col-options> <span class=nb-col-size>{{col.size_lg}} / 12</span> <button class=nb-btn v-on:click=\\\"size(col, '-')\\\"><i class=\\\"fa fa-arrow-left\\\"></i></button> <button class=nb-btn v-on:click=\\\"size(col, '+')\\\"><i class=\\\"fa fa-arrow-right\\\"></i></button> <button class=nb-btn v-on:click=\\\"remove(row, $index)\\\"><i class=\\\"fa fa-trash\\\"></i></button> </div> <div class=nb-clip-area-out v-on:click=\\\"clipPaste(col, -1)\\\" v-if=clipboard> <i class=\\\"fa fa-paste\\\"></i> </div> <div class=nb-modules-wrapper> <div class=nuBlox-mod v-bind:class=\\\"{ 'nb-mod-margin': clipboard }\\\" v-for=\\\"module in col._children\\\" transition=animModule> <div class=nuBlox-mod-options> <button class=nb-btn v-on:click=edit(module.id)><i class=\\\"fa fa-pencil\\\"></i></button> <button class=nb-btn v-on:click=\\\"clipCut(module, col, $index)\\\"><i class=\\\"fa fa-cut\\\"></i></button> <button class=nb-btn v-on:click=\\\"remove(col, $index)\\\"><i class=\\\"fa fa-trash\\\"></i></button> </div> <div class=nuBlox-mod-info> <div class=nb-mod-info-icon><i class=\\\"fa fa-{{ module.moduleType | toIcon }}\\\"></i></div> <modtitle :tit.sync=module.title :id=module.id></modtitle> <div class=nb-mod-info-type>{{ module.moduleType }}</div> </div> <div class=nb-clip-area v-on:click=\\\"clipPaste(col, $index)\\\" v-if=clipboard> <i class=\\\"fa fa-paste\\\"></i> </div> </div> <button class=\\\"nb-btn nb-btn-add\\\" v-on:click=\\\"callModal('modules', col, 'Add module')\\\"><i class=\\\"fa fa-plus\\\"></i></button> </div> <div class=\\\"nb-col-addmodule text-right\\\"> <button class=nb-btn v-on:click=\\\"callModal('modules', col, 'Add module')\\\"><i class=\\\"fa fa-plus\\\"></i></button> </div> </div> </div> <modal v-on:add-module=addMod v-on:add-row=addRow></modal> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Blox.vue\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"modal fade\\\" id=nuBlox-modal tabindex=-1 role=dialog> <div class=\\\"modal-dialog modal-lg\\\" role=document> <div class=modal-content> <div class=modal-header> <button type=button class=close data-dismiss=modal><span>&times;</span></button> <h4 class=modal-title>{{ header }}</h4> </div> <div class=modal-body> <pick></pick> </div> <div class=modal-footer v-if=\\\"modalAction === 'settings'\\\"> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>Close</button> <button type=button class=\\\"btn btn-primary\\\">Save changes</button> </div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Modal.vue\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \"<div class=nb-mod-info-title-input> <label data-nublox-title-id=\\\"{{ id }}\\\" data-nublox-title-title=\\\"{{ tit }}\\\"> <span v-on:click=edit v-if=disable>{{ tit }}</span> <input type=text v-model=tit v-if=!disable v-on:blur=unedit v-on:keyup.enter=unedit> </label> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Modtitle.vue\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=row v-if=\\\"$parent.modalAction === 'modules'\\\"> <div class=col-xs-3 v-for=\\\"module in $root.modules\\\"> <div class=\\\"nuBlox-mod nb-mod-pick\\\" v-on:click=\\\"pickedModule( module.type )\\\"> <div class=nuBlox-mod-info> <div class=nb-mod-info-icon><i class=\\\"fa fa-{{ module.icon }}\\\"></i></div> <div class=nb-mod-info-title>{{ module.name }}</div> </div> </div> </div> </div> <div class=row v-if=\\\"$parent.modalAction === 'rows'\\\"> <div class=col-xs-3 v-for=\\\"row in rowLayouts\\\"> <div class=\\\"nuBlox-mod nb-mod-pick\\\" v-on:click=\\\"pickedRows( row )\\\"> <div class=\\\"row rowSelect\\\"> <div v-for=\\\"col in row\\\" track-by=$index> <div class=\\\"rowSelectCol col-xs-{{ col }}\\\"> <span></span><span></span><span></span><span></span> </div> </div> </div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Pick.vue\n ** module id = 15\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js!less!../less/nu.less\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./Blox.js\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Blox.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Blox.vue\n ** module id = 16\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./Modal.js\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Modal.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Modal.vue\n ** module id = 17\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./Modtitle.js\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Modtitle.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Modtitle.vue\n ** module id = 18\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./Pick.js\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Pick.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Pick.vue\n ** module id = 19\n ** module chunks = 0\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 20\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./nu.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./nu.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./nu.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./src/less/nu.less\n ** module id = 21\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.21\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n  if (camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (!this.prevKeys) return;\n\n    var i = this.prevKeys.length;\n    while (i--) {\n      var key = this.prevKeys[i];\n      if (!key) continue;\n\n      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n      for (var j = 0, l = keys.length; j < l; j++) {\n        toggleClasses(this.el, keys[j], removeClass);\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (!obj[key]) continue;\n    toggleClasses(el, key, addClass);\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction toggleClasses(el, key, fn) {\n  key = key.trim();\n\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.21';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 22\n ** module chunks = 0\n **/"],"sourceRoot":""}